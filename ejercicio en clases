#include <iostream>
#include <string>
#include "stdlib.h"
#define MAX 100
using namespace std;
struct tintereses
{
    int numero;
    string intereses;
    string descripcion;
    int estado;
};
tintereses V[MAX]; // Variable global
int  insertar  ();
void listar    (int N);
void consultar (int N);
void modificar (int N);
void borrar    (int N);
void clasificar();






int main()
{
    int N, opcion;
    do {
        cout << "------MENU------" << endl;
        cout << " 1. INSERTAR    " << endl;
        cout << " 2. LISTAR      " << endl;
        cout << " 3. CONSULTAR   " << endl;
        cout << " 4. MODIFICAR   " << endl;
        cout << " 5. BORRAR      " << endl;
        cout << " 6. CLASIFICAR  " << endl;
        cout << " 0. SALIR       " << endl;
        cout << "----------------" << endl;
        cout << endl<<"PRESIONE LA OPCION" << endl;
        cin >> opcion;
        switch (opcion)
        {
        case 1: N = insertar();
            break;
        case 2:      listar(N);
            break;
        case 3:   consultar(N);
            break;
        case 4:   modificar(N);
            break;
        case 5:      borrar(N);
            break;
        case 6:  clasificar();
            break;
        case 0: cout << "SALIR" << endl;
            break;
        default: cout << "Opcion invalida" << endl;
      
        }
        system("pause");
    } while (opcion != 0);
    system("pause");
    system("cls");
    system("dir");

    return 0;

}

int  insertar() 
{
    int aux;
    cout << "ingrese el numero de elementos:  ";
    cin >> aux;
    for (int i = 0; i < aux; i++)
    {
        cout << "ingrese el ID: " << endl;
        cin >> V[i].numero;
        cout << "ingrese intereses: " << endl;
        cin.ignore();
        getline(cin, V[i].intereses);
        cout << "ingreses la descripcion: " << endl;
        getline(cin, V[i].descripcion);
        V[i].estado = 0;

    }

    return aux;
}
void listar(int N)
{
    cout << "LISTADO" << endl;
    for (int i = 0; i < N; i++)
    {
        if (V[i].estado != 9)
        {
            cout << V[i].numero << "\t";
            cout << V[i].intereses << "\t";
            cout << V[i].descripcion << "\t" << endl;
        }

    }
}
void consultar(int N)
{
    int idElemento;
    bool band = false; //bandera esta apagada si no se encuetra 
    cout << "ingrese el elemnto a buacar: " << endl;
    cin >> idElemento;
    for (int i = 0; i < N; i++)
    {
        if (V[i].numero == idElemento)
        {
            cout << V[i].intereses << "\t";
            cout << V[i].descripcion << "\t" << endl;
            band = true; //return true;
        }
    }
    if (band == false)
        cout << "el emento no se encontrado " << endl;

}
void modificar(int N) 
{
    int idElemento;
    char respuesta;
    bool band = false; //bandera esta apagada si no se encuetra 
    cout << "ingrese el elemnto a buacar: " << endl;
    cin >> idElemento;
    for (int i = 0; i < N; i++)
    {
        if (V[i].numero == idElemento)
        {
            cout << V[i].intereses << "\t";
            cout << "desea modificar el dato?: " << endl;
            cin >> respuesta;
            if (respuesta == 's')
                getline(cin, V[i].intereses);
            cout << V[i].descripcion << "\t" << endl;
            cout << "desea modificar el dato?: " << endl;
            cin >> respuesta;
            if (respuesta == 's')
                getline(cin, V[i].descripcion);
            band = true; //return true;

        }
    }
    if (band == false)
        cout << "el emento no se encontrado " << endl;
}
void borrar(int N) 
{
    int idElemento;
    bool band = false; //bandera esta apagada si no se encuetra 
    cout << "ingrese el elemnto a buacar: " << endl;
    cin >> idElemento;
    for (int i = 0; i < N; i++)
    {
        if (V[i].numero == idElemento)
        {
            cout << V[i].intereses << "\t";
            cout << V[i].descripcion << "\t" << endl;
            cout << "dato borrado" << endl;
            V[i].estado = 9;
            band = true; //return true;
        }
    }
    if (band == false)
        cout << "el emento no se encontrado " << endl;

}
void clasificar()
{

}
